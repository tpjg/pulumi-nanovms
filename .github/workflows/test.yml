name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"
          cache-dependency-path: provider/go.sum

      - name: Install Pulumi CLI
        uses: pulumi/actions@v5

      - name: Build provider binary
        working-directory: provider
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//' || echo "0.1.0-dev")
          echo "Building version: $VERSION"
          go build -ldflags "-X main.Version=$VERSION" -o pulumi-resource-nanovms

      - name: Generate schema
        working-directory: provider
        run: pulumi package get-schema ./pulumi-resource-nanovms > schema.json

      - name: Verify schema
        working-directory: provider
        run: |
          if [ ! -s schema.json ]; then
            echo "Error: schema.json is empty or missing"
            exit 1
          fi
          echo "Schema generated successfully"

      - name: Set up bun instead of Node.js
        uses: oven-sh/setup-bun@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "6.0.x"

      - name: Generate SDKs
        working-directory: provider
        run: |
          # Generate SDKs for all languages
          pulumi package gen-sdk . --local --out ../sdk

          # Initialize Go SDK module
          cd ../sdk/go/pulumi-nanovms
          go mod init github.com/tpjg/pulumi-nanovms/sdk/go/pulumi-nanovms
          go mod tidy

      - name: Build Node.js SDK
        working-directory: sdk/nodejs
        run: |
          bun install
          bun run build

      - name: Build Python SDK
        working-directory: sdk/python
        run: |
          pip install build
          python -m build

      - name: Build .NET SDK
        working-directory: sdk/dotnet
        run: dotnet build

      - name: Test example (Node.js)
        working-directory: examples/nodejs
        run: |
          bun install
          # Note: We can't actually run pulumi up without cloud credentials
          # This just verifies the SDK can be imported
          bun run build || true
