// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A NanoVMs resource for deploying unikernel images
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nanovms:index:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * The configuration for the instance
     */
    declare public readonly config: pulumi.Output<string>;
    /**
     * The name of the image deployed
     */
    declare public readonly image: pulumi.Output<string>;
    /**
     * The unique identifier for the instance
     */
    declare public /*out*/ readonly instanceID: pulumi.Output<string>;
    /**
     * The provider instance ID
     */
    declare public /*out*/ readonly pid: pulumi.Output<string>;
    /**
     * The private IP addresses of the instance
     */
    declare public /*out*/ readonly private_ips: pulumi.Output<string[]>;
    /**
     * The provider (type) for the instance
     */
    declare public readonly provider: pulumi.Output<string>;
    /**
     * The public IP addresses of the instance
     */
    declare public /*out*/ readonly public_ips: pulumi.Output<string[]>;
    /**
     * The status of the instance
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.config === undefined && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if (args?.provider === undefined && !opts.urn) {
                throw new Error("Missing required property 'provider'");
            }
            resourceInputs["config"] = args?.config;
            resourceInputs["image"] = args?.image;
            resourceInputs["provider"] = args?.provider;
            resourceInputs["instanceID"] = undefined /*out*/;
            resourceInputs["pid"] = undefined /*out*/;
            resourceInputs["private_ips"] = undefined /*out*/;
            resourceInputs["public_ips"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["config"] = undefined /*out*/;
            resourceInputs["image"] = undefined /*out*/;
            resourceInputs["instanceID"] = undefined /*out*/;
            resourceInputs["pid"] = undefined /*out*/;
            resourceInputs["private_ips"] = undefined /*out*/;
            resourceInputs["provider"] = undefined /*out*/;
            resourceInputs["public_ips"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The configuration for the instance
     */
    config: pulumi.Input<string>;
    /**
     * The name of the image to deploy
     */
    image?: pulumi.Input<string>;
    /**
     * The provider for the instance
     */
    provider: pulumi.Input<string>;
}
